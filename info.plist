<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>xyz.muensterer.anybar</string>
	<key>category</key>
	<string>Tools</string>
	<key>connections</key>
	<dict>
		<key>05A9AF84-0E54-46FD-8229-A425E7791459</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>F63E0B54-86BD-4E2E-9749-65C186238021</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>18322B9C-3D8B-46A4-A2B1-311961FBE5F4</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>C3CD08AC-123C-4203-B1BF-938D2F18FFAF</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>4E98C8B6-81BC-49A3-9715-E97F8C5365A4</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>FC4A3B47-5162-4B64-B9B2-3C91DE552D70</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>6320D6A5-49A4-4AF5-8641-F717BC60E51A</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>F63E0B54-86BD-4E2E-9749-65C186238021</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>63ADB0D6-BB26-4B59-8A2C-9DBF8A53E642</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>C8C77F12-B844-4F0A-8641-E0AB7B8336B9</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>80B392C5-76A7-45A6-9976-83826B5FD2AB</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>4E98C8B6-81BC-49A3-9715-E97F8C5365A4</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>984F1820-5C5F-4B5D-BFC7-539B310A8841</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>0388721E-CE5E-4ABB-9EFD-ED9368D04EE9</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>988A1B53-FDB5-46F6-A640-326E97DF8A02</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>A56D531B-363B-4CE1-92FF-DEDFC0FDFAF3</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>A09D3BEE-6C3A-4618-AF4E-4EB782DDE014</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>C8C77F12-B844-4F0A-8641-E0AB7B8336B9</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>FC4A3B47-5162-4B64-B9B2-3C91DE552D70</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>D6D3AA0B-3C7A-49AC-A687-EF081F6FFF1C</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>988A1B53-FDB5-46F6-A640-326E97DF8A02</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>EC28C168-820C-420B-820F-12AA2C60D46A</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>03F1AF1F-1596-4AEB-8388-8702689FE03A</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Dennis Muensterer</string>
	<key>description</key>
	<string></string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>anybar</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>./node_modules/.bin/run-node handler.js "$1"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>C3CD08AC-123C-4203-B1BF-938D2F18FFAF</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>anybar</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>2</integer>
				<key>runningsubtext</key>
				<string>Searching...</string>
				<key>script</key>
				<string>./node_modules/.bin/run-node index.js "$1"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string>index.js</string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Anybar</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>18322B9C-3D8B-46A4-A2B1-311961FBE5F4</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>query="{query}";

a=("${(@s/|/)query}")
color=`echo -n $a[1] | tr -d '[[:space:]]'`;
port=`echo -n $a[2] | tr -d '[[:space:]]'`;

if [[ -z $port ]]; then
	echo -n $color | nc -4u -w0 localhost 1738;
else
	echo -n $color | nc -4u -w0 localhost $port;
fi
</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>5</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>03F1AF1F-1596-4AEB-8388-8702689FE03A</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>triggerid</key>
				<string>SetGraphic</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.external</string>
			<key>uid</key>
			<string>EC28C168-820C-420B-820F-12AA2C60D46A</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>'{query}', {allvars}</string>
				<key>cleardebuggertext</key>
				<false/>
				<key>processoutputs</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.debug</string>
			<key>uid</key>
			<string>A56D531B-363B-4CE1-92FF-DEDFC0FDFAF3</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>anybar:setgraphic</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>2</integer>
				<key>runningsubtext</key>
				<string>Loading Graphics...</string>
				<key>script</key>
				<string>VPREFS="${HOME}/Library/Caches/com.runningwithcrayons.Alfred-2/Workflow Data/"
NVPREFS="${HOME}/Library/Application Support/Alfred 2/Workflow Data/"

RESULTS=()

################################################################################
# Adds a result to the result array
#
# $1 uid
# $2 arg
# $3 title
# $4 subtitle
# $5 icon
# $6 valid
# $7 autocomplete
###############################################################################
addResult() {
  RESULT="&lt;item uid='$(xmlEncode "$1")' arg='$(xmlEncode "$2")' valid='$6' autocomplete='$7'&gt;&lt;title&gt;$(xmlEncode "$3")&lt;/title&gt;&lt;subtitle&gt;$(xmlEncode "$4")&lt;/subtitle&gt;&lt;icon&gt;$(xmlEncode "$5")&lt;/icon&gt;&lt;/item&gt;"
  RESULTS+=("$RESULT")
}

addResultConditional() {
	qu=`echo -n $1 | tr '[:upper:]' '[:lower:]'`;
	ti=`echo -n $4 | tr '[:upper:]' '[:lower:]'`;
	if [[ $ti == *$qu* ]]; then
		addResult "$2" "$3" "$4" "$5" "$6" "$7" "$8";
	fi
}

###############################################################################
# Prints the feedback xml to stdout
###############################################################################
getXMLResults() {
  echo -n "&lt;?xml version='1.0'?&gt;&lt;items&gt;"

#  if [ "${#string[@]}" = "0" ]; then
#    echo -n "&lt;item uid='oftask' arg='-' valid='no'&gt;&lt;title&gt;No results found&lt;/title&gt;&lt;subtitle&gt;Please try another search term&lt;/subtitle&gt;&lt;icon&gt;&lt;/icon&gt;&lt;/item&gt; "
#  fi

  for R in ${RESULTS[*]}; do
    echo -n "$R "
  done

  echo -n "&lt;/items&gt; "
}

###############################################################################
# Escapes XML special characters with their entities
###############################################################################
xmlEncode() {
  echo -n "$1" | sed 's/\n/ /' | sed 's/&amp;/&amp;amp;/' | sed 's/&gt;/&amp;gt;/' | sed 's/&lt;/&amp;lt;/' | sed "s/\'/&amp;apos;/" | sed 's/\"/&amp;quot;/'
}

###############################################################################
# Read the bundleid from the workflow's info.plist
###############################################################################
getBundleId() {
  /usr/libexec/PlistBuddy  -c "Print :bundleid" "info.plist"
}

###############################################################################
# Get the workflow data dir
###############################################################################
getDataDir() {
  local BUNDLEID=$(getBundleId)
  echo  -n "${NVPREFS}${BUNDLEID}"
}

###############################################################################
# Get the workflow cache dri
###############################################################################
getCacheDir() {
  local BUNDLEID=$(getBundleId)
  echo -n "${VPREFS}${BUNDLEID}"
}

###############################################################################
# Save key=value to the workflow properties
#
# $1 key
# $2 value
# $3 non-volatile 0/1
# $4 filename (optional, filename will be "settings" if not specified)
###############################################################################
setPref() {
  local BUNDLEID=$(getBundleId)
  if [ "$3" = "0" ]; then
    local PREFDIR="${VPREFS}${BUNDLEID}"
  else
    local PREFDIR="${NVPREFS}${BUNDLEID}"
  fi

  if [ ! -d "$PREFDIR" ]; then
    mkdir -p "$PREFDIR"
  fi

  if [ -z "$4" ]; then
    local PREFFILE="${PREFDIR}/settings"
  else
    local PREFFILE="${PREFDIR}/$4"
  fi

  if [ ! -f "$PREFFILE" ]; then
    touch "$PREFFILE"
  fi

  local KEY_EXISTS=$(grep -c "$1=" "$PREFFILE")
  if [ "$KEY_EXISTS" = "0" ]; then
    echo -n "$1=$2" &gt;&gt; "$PREFFILE"
  else
    sed -i "" s/"$1=.*"/"$1=$2"/ "$PREFFILE"
  fi
}

###############################################################################
# Read a value for a given key from the workflow preferences
#
# $1 key
# $2 non-volatile 0/1
# $3 filename (optional, filename will be "settings" if not specified)
###############################################################################
getPref() {
  local BUNDLEID=$(getBundleId)
  if [ "$2" = "0" ]; then
    local PREFDIR="${VPREFS}${BUNDLEID}"
  else
    local PREFDIR="${NVPREFS}${BUNDLEID}"
  fi

  if [ ! -d "$PREFDIR" ]; then
    return
  fi

  if [ -z "$3" ]; then
    local PREFFILE="${PREFDIR}/settings"
  else
    local PREFFILE="${PREFDIR}/$3"
  fi

  if [ ! -f "$PREFFILE" ]; then
    return
  fi

  local VALUE=$(sed "/^\#/d" "$PREFFILE" | grep "$1"  | tail -n 1 | cut -d "=" -f2-)
  echo -n "$VALUE"
}

query="{query}"


addResultConditional "$query" 'abwhite' "white" 'White Circle' 'AnyBar Workflow' 'icon.png' 'yes' '';

addResultConditional "$query" 'abblue' "blue" 'Blue Circle' 'AnyBar Workflow' 'icon.png' 'yes' '';

addResultConditional "$query" 'abred' "red" 'Red Circle' 'AnyBar Workflow' 'icon.png' 'yes' '';

addResultConditional "$query" 'aborange' "orange" 'Orange Circle' 'AnyBar Workflow' 'icon.png' 'yes' '';

addResultConditional "$query" 'abyellow' "yellow" 'Yellow Circle' 'AnyBar Workflow' 'icon.png' 'yes' '';

addResultConditional "$query" 'abgreen' "green" 'Green Circle' 'AnyBar Workflow' 'icon.png' 'yes' '';

addResultConditional "$query" 'abcyan' "cyan" 'Cyan Circle' 'AnyBar Workflow' 'icon.png' 'yes' '';

addResultConditional "$query" 'abpurple' "purple" 'Purple Circle' 'AnyBar Workflow' 'icon.png' 'yes' '';

addResultConditional "$query" 'abblack' "black" 'Black Circle' 'AnyBar Workflow' 'icon.png' 'yes' '';

addResultConditional "$query" 'abquestion' "question" 'Question' 'AnyBar Workflow' 'icon.png' 'yes' '';

addResultConditional "$query" 'abexclamation' "exclamation" 'Exclamation' 'AnyBar Workflow' 'icon.png' 'yes' '';

for filename in ~/.AnyBar/*.png; do
	name="$(basename "$filename" .png)";
	name=`echo -n $name | tr '\_' ' '`;
    addResultConditional "$query" "ab$name" "$name" "$name" 'AnyBar Workflow' 'icon.png' 'yes' '';
done

res="$(getXMLResults)";

if [[ $res == *"&lt;items&gt;&lt;/items&gt;"* ]]; then
	addResult '999' ' ' 'Sorry, no match. Try Again!' 'AnyBar Workflow' 'icon.png' 'no' '';
fi

echo -n "$(getXMLResults)";


</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>AnyBar Workflow</string>
				<key>title</key>
				<string>Set the Graphic</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>D6D3AA0B-3C7A-49AC-A687-EF081F6FFF1C</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>set theQuery to "{query}"

tell application "Alfred 4" to run trigger "SetGraphic" in workflow "xyz.muensterer.anybar" with argument theQuery</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>6</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>A09D3BEE-6C3A-4618-AF4E-4EB782DDE014</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>
#########################
# Contants.
#########################
VPREFS="${HOME}/Library/Caches/com.runningwithcrayons.Alfred-2/Workflow Data/"
NVPREFS="${HOME}/Library/Application Support/Alfred 2/Workflow Data/"

###############################################################################
# Read the bundleid from the workflow's info.plist
###############################################################################
getBundleId() {
  /usr/libexec/PlistBuddy  -c "Print :bundleid" "info.plist"
}

###############################################################################
# Get the workflow data dir
###############################################################################
getDataDir() {
  local BUNDLEID=$(getBundleId)
  echo "${NVPREFS}${BUNDLEID}"
}

if [ ! -d "$(getDataDir)" ]; then
   mkdir -p "$(getDataDir)";
   echo -n "1738" &gt; "$(getDataDir)/port.txt";
fi

query="{query}";

port=`cat "$(getDataDir)/port.txt"`;

echo -n "$query|$port";</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>988A1B53-FDB5-46F6-A640-326E97DF8A02</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>triggerid</key>
				<string>Launch</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.external</string>
			<key>uid</key>
			<string>6320D6A5-49A4-4AF5-8641-F717BC60E51A</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>
#########################
# Contants.
#########################
VPREFS="${HOME}/Library/Caches/com.runningwithcrayons.Alfred-2/Workflow Data/"
NVPREFS="${HOME}/Library/Application Support/Alfred 2/Workflow Data/"

###############################################################################
# Read the bundleid from the workflow's info.plist
###############################################################################
getBundleId() {
  /usr/libexec/PlistBuddy  -c "Print :bundleid" "info.plist"
}

###############################################################################
# Get the workflow data dir
###############################################################################
getDataDir() {
  local BUNDLEID=$(getBundleId)
  echo "${NVPREFS}${BUNDLEID}"
}

if [ ! -d "$(getDataDir)" ]; then
   mkdir -p "$(getDataDir)";
   echo -n "1738" &gt; "$(getDataDir)/port.txt";
fi

query="{query}"

if [[ -z $query ]]; then
	open -n ~/Applications/AnyBar.app
	echo -n "1738" &gt; "$(getDataDir)/port.txt";
else
	ANYBAR_PORT=$query open -n ~/Applications/AnyBar.app
	echo -n "$query" &gt; "$(getDataDir)/port.txt";
fi
</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>5</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>F63E0B54-86BD-4E2E-9749-65C186238021</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>keyword</key>
				<string>anybar:launch</string>
				<key>subtext</key>
				<string>AnyBar Workflow</string>
				<key>text</key>
				<string>Launch AnyBar with Port</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>05A9AF84-0E54-46FD-8229-A425E7791459</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>query="{query}"

if [[ -d "~/.AnyBar" ]]; then
	mv "$query" ~/.AnyBar;
else
	mkdir ~/.AnyBar;
	mv "$query" ~/.AnyBar;
fi
</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>0388721E-CE5E-4ABB-9EFD-ED9368D04EE9</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>acceptsmulti</key>
				<false/>
				<key>filetypes</key>
				<array>
					<string>public.png</string>
				</array>
				<key>name</key>
				<string>Move to Anybar</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.action</string>
			<key>uid</key>
			<string>984F1820-5C5F-4B5D-BFC7-539B310A8841</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>
#########################
# Contants.
#########################
VPREFS="${HOME}/Library/Caches/com.runningwithcrayons.Alfred-2/Workflow Data/"
NVPREFS="${HOME}/Library/Application Support/Alfred 2/Workflow Data/"

###############################################################################
# Read the bundleid from the workflow's info.plist
###############################################################################
getBundleId() {
  /usr/libexec/PlistBuddy  -c "Print :bundleid" "info.plist"
}

###############################################################################
# Get the workflow data dir
###############################################################################
getDataDir() {
  local BUNDLEID=$(getBundleId)
  echo "${NVPREFS}${BUNDLEID}"
}

if [ ! -d "$(getDataDir)" ]; then
   mkdir -p "$(getDataDir)";
   echo -n "1738" &gt; "$(getDataDir)/port.txt";
fi

query="{query}";

echo -n "$query" &gt; "$(getDataDir)/port.txt";

echo "Set to port: {query}.";</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>C8C77F12-B844-4F0A-8641-E0AB7B8336B9</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>anybar:setport</string>
				<key>subtext</key>
				<string>AnyBar Workflow</string>
				<key>text</key>
				<string>Set the Port to send commands</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>63ADB0D6-BB26-4B59-8A2C-9DBF8A53E642</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>anybar:setup</string>
				<key>subtext</key>
				<string>AnyBar Workflow</string>
				<key>text</key>
				<string>Setup Anybar by creating and moving default graphics.</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>80B392C5-76A7-45A6-9976-83826B5FD2AB</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>
#########################
# Contants.
#########################
VPREFS="${HOME}/Library/Caches/com.runningwithcrayons.Alfred-2/Workflow Data/"
NVPREFS="${HOME}/Library/Application Support/Alfred 2/Workflow Data/"

###############################################################################
# Read the bundleid from the workflow's info.plist
###############################################################################
getBundleId() {
  /usr/libexec/PlistBuddy  -c "Print :bundleid" "info.plist"
}

###############################################################################
# Get the workflow data dir
###############################################################################
getDataDir() {
  local BUNDLEID=$(getBundleId)
  echo "${NVPREFS}${BUNDLEID}"
}

if [ ! -d "$(getDataDir)" ]; then
   mkdir -p "$(getDataDir)";
   echo -n "1738" &gt; "$(getDataDir)/port.txt";
fi

if [[ ! -d "${HOME}/.AnyBar" ]]; then
	mkdir -p "${HOME}/.AnyBar"
fi

cp -f ./AnyBar/*.png "${HOME}/.AnyBar"

echo -n "Graphics Copied!  ";
</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>4E98C8B6-81BC-49A3-9715-E97F8C5365A4</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<true/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string>AnyBar Workflow</string>
				<key>title</key>
				<string>{query}</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>FC4A3B47-5162-4B64-B9B2-3C91DE552D70</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Anybar Workflow by Richard Guay
http://customct.com/alfred-2-workflows</string>
	<key>uidata</key>
	<dict>
		<key>0388721E-CE5E-4ABB-9EFD-ED9368D04EE9</key>
		<dict>
			<key>xpos</key>
			<integer>410</integer>
			<key>ypos</key>
			<integer>525</integer>
		</dict>
		<key>03F1AF1F-1596-4AEB-8388-8702689FE03A</key>
		<dict>
			<key>xpos</key>
			<integer>410</integer>
			<key>ypos</key>
			<integer>165</integer>
		</dict>
		<key>05A9AF84-0E54-46FD-8229-A425E7791459</key>
		<dict>
			<key>xpos</key>
			<integer>210</integer>
			<key>ypos</key>
			<integer>415</integer>
		</dict>
		<key>18322B9C-3D8B-46A4-A2B1-311961FBE5F4</key>
		<dict>
			<key>xpos</key>
			<integer>10</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
		<key>4E98C8B6-81BC-49A3-9715-E97F8C5365A4</key>
		<dict>
			<key>xpos</key>
			<integer>410</integer>
			<key>ypos</key>
			<integer>765</integer>
		</dict>
		<key>6320D6A5-49A4-4AF5-8641-F717BC60E51A</key>
		<dict>
			<key>xpos</key>
			<integer>10</integer>
			<key>ypos</key>
			<integer>345</integer>
		</dict>
		<key>63ADB0D6-BB26-4B59-8A2C-9DBF8A53E642</key>
		<dict>
			<key>xpos</key>
			<integer>210</integer>
			<key>ypos</key>
			<integer>645</integer>
		</dict>
		<key>80B392C5-76A7-45A6-9976-83826B5FD2AB</key>
		<dict>
			<key>xpos</key>
			<integer>210</integer>
			<key>ypos</key>
			<integer>765</integer>
		</dict>
		<key>984F1820-5C5F-4B5D-BFC7-539B310A8841</key>
		<dict>
			<key>xpos</key>
			<integer>10</integer>
			<key>ypos</key>
			<integer>525</integer>
		</dict>
		<key>988A1B53-FDB5-46F6-A640-326E97DF8A02</key>
		<dict>
			<key>xpos</key>
			<integer>410</integer>
			<key>ypos</key>
			<integer>285</integer>
		</dict>
		<key>A09D3BEE-6C3A-4618-AF4E-4EB782DDE014</key>
		<dict>
			<key>xpos</key>
			<integer>610</integer>
			<key>ypos</key>
			<integer>285</integer>
		</dict>
		<key>A56D531B-363B-4CE1-92FF-DEDFC0FDFAF3</key>
		<dict>
			<key>xpos</key>
			<integer>590</integer>
			<key>ypos</key>
			<integer>230</integer>
		</dict>
		<key>C3CD08AC-123C-4203-B1BF-938D2F18FFAF</key>
		<dict>
			<key>xpos</key>
			<integer>150</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
		<key>C8C77F12-B844-4F0A-8641-E0AB7B8336B9</key>
		<dict>
			<key>xpos</key>
			<integer>410</integer>
			<key>ypos</key>
			<integer>645</integer>
		</dict>
		<key>D6D3AA0B-3C7A-49AC-A687-EF081F6FFF1C</key>
		<dict>
			<key>xpos</key>
			<integer>210</integer>
			<key>ypos</key>
			<integer>285</integer>
		</dict>
		<key>EC28C168-820C-420B-820F-12AA2C60D46A</key>
		<dict>
			<key>xpos</key>
			<integer>10</integer>
			<key>ypos</key>
			<integer>165</integer>
		</dict>
		<key>F63E0B54-86BD-4E2E-9749-65C186238021</key>
		<dict>
			<key>xpos</key>
			<integer>410</integer>
			<key>ypos</key>
			<integer>405</integer>
		</dict>
		<key>FC4A3B47-5162-4B64-B9B2-3C91DE552D70</key>
		<dict>
			<key>xpos</key>
			<integer>610</integer>
			<key>ypos</key>
			<integer>765</integer>
		</dict>
	</dict>
	<key>version</key>
	<string></string>
	<key>webaddress</key>
	<string>https://muensterer.xyz</string>
</dict>
</plist>
